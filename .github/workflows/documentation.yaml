name: Documentation

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  # Configures Cargo to use the CLI `git`, which is configured to access
  # private repos. See
  # <https://doc.rust-lang.org/cargo/appendix/git-authentication.html>.
  CARGO_NET_GIT_FETCH_WITH_CLI: 'true'

jobs:
  swift:
    name: Swift
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: '${{ secrets.ACCESS_TOKEN }}'

      - name: Generate Documentation
        run: |
          swift package --allow-writing-to-directory docs \
          generate-documentation --target LoamSdk --disable-indexing \
          --output-path docs \
          --transform-for-static-hosting \
          --hosting-base-path swift
        working-directory: swift

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_DOCUMENTATION_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Sync Docs to Google Cloud Storage
        run: |
          gsutil -m rsync -r \
          -d swift/docs \
          gs://e2d3e242bbd420b1f977a1f84684a45f1803a5b4/swift

  rust:
    name: Rust
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: '${{ secrets.ACCESS_TOKEN }}'

      - name: Set up Git
        run: >
          # Configures the global `git` CLI to be able to access private repos.

          # `cargo` will make use of this.

          git config --global url.'https://github.com/'.insteadOf
          'ssh://git@github.com/'

          # Copy the encoded auth token from local config that actions/checkout
          configured.

          git config --global http.'https://github.com/'.extraHeader "$(git
          config --local http.'https://github.com/'.extraHeader)"

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Generate Documentation
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: '-p loam-sdk --no-deps --features tokio'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_DOCUMENTATION_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Sync Docs to Google Cloud Storage
        run: |
          gsutil -m rsync -r \
          -d target/doc \
          gs://e2d3e242bbd420b1f977a1f84684a45f1803a5b4/rust

  android:
    name: Android
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: '${{ secrets.ACCESS_TOKEN }}'

      - name: Set up Git
        run: >
          # Configures the global `git` CLI to be able to access private repos.

          # `cargo` will make use of this.

          git config --global url.'https://github.com/'.insteadOf
          'ssh://git@github.com/'

          # Copy the encoded auth token from local config that actions/checkout
          configured.

          git config --global http.'https://github.com/'.extraHeader "$(git
          config --local http.'https://github.com/'.extraHeader)"

      - run: >-
          rustup toolchain install stable --profile minimal --target
          aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
          cache: gradle

      - name: Generate Documentation
        run: ./gradlew dokkaHtml
        working-directory: android

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_DOCUMENTATION_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Sync Docs to Google Cloud Storage
        run: |
          gsutil -m rsync -r \
          -d android/build/dokka/html \
          gs://e2d3e242bbd420b1f977a1f84684a45f1803a5b4/android
