# This is based on
# <https://github.com/ongardie/cubicle/blob/b307fe9/.github/workflows/main.yaml>
# with Diego's permission.  The initial workflow YAML skeleton before that was
# based on
# <https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml>
# and
# <https://github.com/ramosbugs/oauth2-rs/blob/main/.github/workflows/main.yml>.
#
# GitHub Actions workflow syntax documentation is here:
# <https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions>.
name: CI

on:
  pull_request: {}
  push:
    branches:
    - main
  workflow_dispatch: {}

jobs:
  swift-package:
    name: Swift Package
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        override: 'true'
        profile: minimal
        toolchain: stable

    - name: Use Rust/Cargo cache
      uses: actions/cache@v3
      with:
        key: cargo-ubuntu-20.04-stable-${{ hashFiles('Cargo.lock') }}
        path: |
          ~/.cargo/registry
          ~/.cargo/git/
        restore-keys: cargo-ubuntu-20.04-stable-

    - name: Install cbindgen
      run: cargo +stable install cbindgen --version 0.24.3

    - name: Build loam-sdk-ffi
      run: swift/build-ffi.sh -d -v --verify-ffi

    - name: Build and Test
      run: swift test -v
      working-directory: swift

  swift-pod:
    name: Swift Pod
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3

      - name: Lint
        run: swiftlint lint --strict --reporter github-actions-logging
        working-directory: swift

      - run: rustup toolchain install stable --profile minimal --target x86_64-apple-ios,aarch64-apple-ios,aarch64-apple-ios-sim

      - name: Use Rust/Cargo cache
        uses: actions/cache@v3
        with:
          key: cargo-macOS-stable-${{ hashFiles('Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git/
          restore-keys: cargo-macOS-stable-

      - name: Run pod lint
        run: pod lib lint --verbose

  rust:
    name: Rust
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
          override: 'true'
          profile: minimal
          toolchain: stable

      - name: Use Rust/Cargo cache
        uses: actions/cache@v3
        with:
          key: cargo-ubuntu-20.04-stable-${{ hashFiles('Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git/
          restore-keys: cargo-ubuntu-20.04-stable-

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          args: --workspace
          command: test
        env:
          RUST_BACKTRACE: '1'

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          args: --all -- --check
          command: fmt

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          args: --workspace --tests -- -D warnings
          command: clippy

      - name: Install cargo audit
        uses: actions-rs/cargo@v1
        with:
          args: cargo-audit
          command: install

      - name: Run cargo audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
