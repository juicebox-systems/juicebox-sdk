# This is based on
# <https://github.com/ongardie/cubicle/blob/b307fe9/.github/workflows/main.yaml>
# with Diego's permission.  The initial workflow YAML skeleton before that was
# based on
# <https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml>
# and
# <https://github.com/ramosbugs/oauth2-rs/blob/main/.github/workflows/main.yml>.
#
# GitHub Actions workflow syntax documentation is here:
# <https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions>.
name: CI

on:
  pull_request: {}
  push:
    branches:
    - main
  workflow_dispatch: {}

env:
  # Configures Cargo to use the CLI `git`, which is configured to access
  # private repos. See
  # <https://doc.rust-lang.org/cargo/appendix/git-authentication.html>.
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"

jobs:
  swift-package:
    name: Swift Package
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Set up Git
      run: |
        # Configures the global `git` CLI to be able to access private repos.
        # `cargo` will make use of this.
        git config --global url.'https://github.com/'.insteadOf 'ssh://git@github.com/'
        # Copy the encoded auth token from local config that actions/checkout configured.
        git config --global http.'https://github.com/'.extraHeader "$(git config --local http.'https://github.com/'.extraHeader)"

    - name: Install Rust stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Use Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Install cbindgen
      run: cargo +stable install cbindgen --version 0.24.3

    - name: Build loam-sdk-ffi
      run: swift/ffi.sh --debug --verbose --verify

    - name: Build and Test
      run: swift test -v
      working-directory: swift

  swift-pod:
    name: Swift Pod
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Set up Git
        run: |
          # Configures the global `git` CLI to be able to access private repos.
          # `cargo` will make use of this.
          git config --global url.'https://github.com/'.insteadOf 'ssh://git@github.com/'
          # Copy the encoded auth token from local config that actions/checkout configured.
          git config --global http.'https://github.com/'.extraHeader "$(git config --local http.'https://github.com/'.extraHeader)"

      - name: Lint
        run: swiftlint lint --strict --reporter github-actions-logging
        working-directory: swift

      - run: rustup toolchain install stable --profile minimal --target x86_64-apple-ios,aarch64-apple-ios,aarch64-apple-ios-sim

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run pod lint
        run: pod lib lint --verbose

  android:
    name: Android
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Set up Git
      run: |
        # Configures the global `git` CLI to be able to access private repos.
        # `cargo` will make use of this.
        git config --global url.'https://github.com/'.insteadOf 'ssh://git@github.com/'
        # Copy the encoded auth token from local config that actions/checkout configured.
        git config --global http.'https://github.com/'.extraHeader "$(git config --local http.'https://github.com/'.extraHeader)"

    - run: rustup toolchain install stable --profile minimal --target aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android

    - name: Use Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'
        cache: 'gradle'

    - name: Build and Test
      uses: ReactiveCircus/android-emulator-runner@v2
      with:
        api-level: 33
        target: google_apis
        arch: x86_64
        working-directory: ./android
        script: ./gradlew connectedCheck

  rust:
    name: Rust
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Set up Git
        run: |
          # Configures the global `git` CLI to be able to access private repos.
          # `cargo` will make use of this.
          git config --global url.'https://github.com/'.insteadOf 'ssh://git@github.com/'
          # Copy the encoded auth token from local config that actions/checkout configured.
          git config --global http.'https://github.com/'.extraHeader "$(git config --local http.'https://github.com/'.extraHeader)"

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
          override: 'true'
          profile: minimal
          toolchain: stable

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          args: --workspace
          command: test
        env:
          RUST_BACKTRACE: '1'

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          args: --all -- --check
          command: fmt

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          args: --workspace --tests -- -D warnings
          command: clippy

      - name: Install cargo audit
        uses: actions-rs/cargo@v1
        with:
          args: cargo-audit
          command: install

      - name: Run cargo audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
